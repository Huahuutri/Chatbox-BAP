import os
from flask import Flask, render_template, request, jsonify
from dotenv import load_dotenv
from openai import OpenAI

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

app = Flask(__name__)

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/chat", methods=["POST"])
def chat():
    data = request.get_json()
    user_message = data.get("message", "").strip()

    if not user_message:
        return jsonify({"reply": "‚ùóB·∫°n ch∆∞a nh·∫≠p n·ªôi dung n√†o."})

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",  # Ho·∫∑c gpt-4 n·∫øu c√≥ quy·ªÅn
            messages=[
                {"role": "system", "content": "B·∫°n l√† tr·ª£ l√Ω AI th√¢n thi·ªán."},
                {"role": "user", "content": user_message}
            ]
        )
        reply = response.choices[0].message.content
        return jsonify({"reply": reply})
    except Exception as e:
        # Ghi log l·ªói ra terminal ƒë·ªÉ b·∫°n d·ªÖ ki·ªÉm tra
        print("‚ùå L·ªói khi g·ªçi OpenAI:", str(e))
        return jsonify({
            "reply": "ü§ñ H·ªá th·ªëng AI ƒëang ƒë∆∞·ª£c b·∫£o tr√¨ & n√¢ng c·∫•p. Vui l√≤ng li√™n h·ªá Zalo: "
                     "<a href='https://zalo.me/0916198819' target='_blank'>0916.19.88.19</a>. "
                     "Xin c·∫£m ∆°n qu√Ω kh√°ch ƒë√£ th√¥ng c·∫£m!"
        }), 200  # Tr·∫£ v·ªÅ 200 ƒë·ªÉ kh√¥ng g√¢y l·ªói JS ph√≠a client

if __name__ == "__main__":
    app.run(debug=True)
